spring.application.name=template

####Database Settings=============================================
spring.datasource.url=jdbc:mysql://localhost:3306/template
spring.datasource.username=root
spring.datasource.password=!Aa1064828
########Database Settings=============================================
####JPA Settings=============================================
spring.jpa.hibernate.ddl-auto=update
########JPA Settings=============================================

####TCP Server Settings=============================================
tcp.server.port=5000
tcp.server.channels
########TCP Server Settings=============================================

####Logging=======================================================
##로그 기본 설정----------------------------------------------------
!로그레벨을 INFO로 설정
logging.level.root=info
!특정 패키지의 로그레벨을 DEBUG로 설정
!logging.level.com.example.controller=debug
!파일 위치와 파일명 지정
logging.file.name=./logs/application.log
####로그 기본 설정----------------------------------------------------

##로그 패턴--------------------------------------------------------
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{sessionId}] %highlight([%-5level]) %msg %boldWhite((%C:%L\\)) %n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{sessionId}] [%-5level] %msg (%C:%L\\) %n
####로그 패턴--------------------------------------------------------

##로그 롤링 정책---------------------------------------------------
!로그파일 용량 기준 넘으면 새로운 로그파일 생성
logging.logback.rollingpolicy.max-file-size=10MB
!백업 파일명 패턴 ${LOG_FILE} = logging.file.name, %d{yyyy-MM-dd} = ??, %i = ???(??? ???)
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
!로그파일 보관 일수
logging.logback.rollingpolicy.max-history=90
####로그 롤링 정책---------------------------------------------------

########Logging=======================================================