spring.application.name=template

########Server Settings=============================================
server.port=8443
server.ssl.enabled=true
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=123123
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=alias
server.http2.enabled=true
########Server Settings=============================================

####Actuator Settings=============================================
management.endpoints.web.exposure.include=metrics
########Actuator Settings=============================================

jwt.secret=81c1d0fa98e3f5154a71acc83f3e3dd008353a3794badfc2a1bd7aff1b0849c5

####Swagger Settings=============================================
#설정이 너무 많음 공식문서 번역해서 사용할것 https://springdoc.org/#properties
springdoc.show-actuator=true
springdoc.api-docs.enabled=true
########Swagger Settings=============================================

####Servlet Settings=============================================
# 최대 요청 크기 (10MB)
spring.servlet.multipart.max-request-size=1024MB
# 파일당 최대 크기 (5MB)
spring.servlet.multipart.max-file-size=50MB
########Servlet Settings=============================================

####Database Settings=============================================
spring.datasource.url=jdbc:mysql://localhost:3306/template
spring.datasource.username=root
spring.datasource.password=!Aa1064828
########Database Settings=============================================
####JPA Settings=============================================
spring.jpa.hibernate.ddl-auto=update
#spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql
########JPA Settings=============================================

####File=======================================================
upload.file.dir=D:/PROJECT_UPLOAD
upload.file.test=/test
########File=======================================================

####Logging=======================================================
##로그 기본 설정----------------------------------------------------
!로그레벨을 INFO로 설정
logging.level.root=INFO
logging.level.org.springframework.integration.ip=INFO
logging.level.org.springframework.security=INFO
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=TRACE
logging.level.org.hibernate.orm.jdbc.bind=TRACE
!특정 패키지의 로그레벨을 DEBUG로 설정
!logging.level.com.example.controller=debug
!파일 위치와 파일명 지정
logging.file.name=./logs/application.log
####로그 기본 설정----------------------------------------------------

##로그 패턴--------------------------------------------------------
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{sessionId}] %highlight([%-5level]) %msg %boldWhite((%C:%L\\)) %n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{sessionId}] [%-5level] %msg (%C:%L\\) %n
####로그 패턴--------------------------------------------------------

##로그 롤링 정책---------------------------------------------------
!로그파일 용량 기준 넘으면 새로운 로그파일 생성
logging.logback.rollingpolicy.max-file-size=10MB
!백업 파일명 패턴 ${LOG_FILE} = logging.file.name, %d{yyyy-MM-dd} = ??, %i = ???(??? ???)
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
!로그파일 보관 일수
logging.logback.rollingpolicy.max-history=90
####로그 롤링 정책---------------------------------------------------

########Logging=======================================================